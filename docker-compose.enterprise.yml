version: '3.8'

services:
  centrika-api:
    build:
      context: .
      dockerfile: Dockerfile.enterprise
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://centrika:secure_password@postgres:5432/centrika_db
      - REDIS_URL=redis://redis:6379
      - ENCRYPTION_KEY=a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890
      - SESSION_SECRET=enterprise-session-secret-key-production
      - AUTO_MIGRATE=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/usr/src/app/logs
    restart: unless-stopped
    networks:
      - centrika-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=centrika_db
      - POSTGRES_USER=centrika
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - centrika-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - centrika-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.enterprise.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - centrika-api
    restart: unless-stopped
    networks:
      - centrika-network

volumes:
  postgres_data:
  redis_data:

networks:
  centrika-network:
    driver: bridge